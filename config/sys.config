%% -*- erlang -*-
[{ballgame, [
    {matchmaker, ballgame_matchmaker},
    {first_hand,   true},
    {packet_config,
        #{stress_delay => 500,
        operations_count => 1000,
        packet_size => 20,
        channel =>  1}
    },
    {players,          1},
    {nav_config,
        #{table => temp,
        gc_interval => 30000,
        % mean_interval => 60000,
        poll_interval => 10000}
    }
]},

{grisp, [{drivers, [
                {spi, grisp_spi_drv}
                % {gpio, grisp_gpio_drv},
                % {i2c, grisp_i2c_drv}
            ]},
        {devices, [
            % {gpio1, pmod_amp2},
            % {uart, pmod_maxsonar},
            % {spi1, pmod_gyro},
            {spi1, pmod_nav}
            % {spi2, pmod_als}
        ]}
]},

{partisan, [{partisan_peer_service_manager,
            partisan_hyparview_peer_service_manager},
            % {peer_port, 20000},
            {acceptor_pool_size, 3},
            {tls, false},
            {fanout, 3},
            {gossip, true},
            {gossip_interval, 20000},
            {max_active_size, 6},
            {max_passive_size, 10},
            {min_active_size, 3},
            {tracing, true},
            {passive_view_shuffle_period, 20000},
            {channels, [1]}
]},
%
% {partisan, [{partisan_peer_service_manager,
%             partisan_hyparview_peer_service_manager},
%             {peer_port, 20000},
%             {acceptor_pool_size, 3},
%             {tls, false},
%             {channels, [1]}
% ]},


{lager, [
  {handlers, [
    {lager_console_backend, [{level, info}]}
  ]}
]},

{logger, [
  {level, notice}
  % {level, notice}
]},

{lasp, [{membership, false},
    {storage_backend, lasp_ets_storage_backend},
    % {mode, state_based},
    {mode, delta_based},
    {max_gc_counter, 5},
    % see https://github.com/lasp-lang/lasp/commit/a9422207e554e47495c7c488450a238274844eb9
    % {propagate_on_update, true},
    {plumtree_peer_refresh_interval, 30000},
    {delta_interval, 25000}
]},

{kernel, [
    % {logger_level, notice},
    {logger_level, notice},
    {logger, [{handler,
      default,
      logger_std_h,
      #{level => notice,
      % #{level => notice,
        formatter => {logger_formatter, #{single_line => true}}}
   }]}
]}].
